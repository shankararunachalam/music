using System.ComponentModel;

namespace MusicTheorySDK.Utils
{
    public enum Notes
    {
        [Position(10)]
        [NoteOf('C')]
        [Description("C♭♭")]
        CFlatFlat,
        [Position(11)]
        [NoteOf('C')]
        [Description("C♭")]
        CFlat,
        [Position(0)]
        [NoteOf('C')]
        C,
        [Position(1)]
        [NoteOf('C')]
        [Description("C♯")]
        CSharp,
        [Position(2)]
        [NoteOf('C')]
        [Description("C♯♯")]
        CSharpSharp,
        [Position(0)]
        [NoteOf('D')]
        [Description("D♭♭")]
        DFlatFlat,
        [Position(1)]
        [NoteOf('D')]
        [Description("D♭")]
        DFlat,
        [Position(2)]
        [NoteOf('D')]
        D,
        [Position(3)]
        [NoteOf('D')]
        [Description("D♯")]
        DSharp,
        [Position(4)]
        [NoteOf('D')]
        [Description("D♯♯")]
        DSharpSharp,
        [Position(2)]
        [NoteOf('E')]
        [Description("E♭♭")]
        EFlatFlat,
        [Position(3)]
        [NoteOf('E')]
        [Description("E♭")]
        EFlat,
        [Position(4)]
        [NoteOf('E')]
        E,
        [Position(5)]
        [NoteOf('E')]
        [Description("E♯")]
        ESharp,
        [Position(6)]
        [NoteOf('E')]
        [Description("E♯♯")]
        ESharpSharp,
        [Position(3)]
        [NoteOf('F')]
        [Description("F♭♭")]
        FFlatFlat,
        [Position(4)]
        [NoteOf('F')]
        [Description("F♭")]
        FFlat,
        [Position(5)]
        [NoteOf('F')]
        F,
        [Position(6)]
        [NoteOf('F')]
        [Description("F♯")]
        FSharp,
        [Position(7)]
        [NoteOf('F')]
        [Description("F♯♯")]
        FSharpSharp,
        [Position(5)]
        [NoteOf('G')]
        [Description("G♭♭")]
        GFlatFlat,
        [Position(6)]
        [NoteOf('G')]
        [Description("G♭")]
        GFlat,
        [Position(7)]
        [NoteOf('G')]
        G,
        [Position(8)]
        [NoteOf('G')]
        [Description("G♯")]
        GSharp,
        [Position(9)]
        [NoteOf('G')]
        [Description("G♯♯")]
        GSharpSharp,
        [Position(7)]
        [NoteOf('A')]
        [Description("A♭♭")]
        AFlatFlat,
        [Position(8)]
        [NoteOf('A')]
        [Description("A♭")]
        AFlat,
        [Position(9)]
        [NoteOf('A')]
        A,
        [Position(10)]
        [NoteOf('A')]
        [Description("A♯")]
        ASharp,
        [Position(11)]
        [NoteOf('A')]
        [Description("A♯♯")]
        ASharpSharp,
        [Position(9)]
        [NoteOf('B')]
        [Description("B♭♭")]
        BFlatFlat,
        [Position(10)]
        [NoteOf('B')]
        [Description("B♭")]
        BFlat,
        [Position(11)]
        [NoteOf('B')]
        B,
        [Position(0)]
        [NoteOf('B')]
        [Description("B♯")]
        BSharp,
        [Position(1)]
        [NoteOf('B')]
        [Description("B♯♯")]
        BSharpSharp
    }

    public enum Intervals
    {
        PerfectUnison,
        DiminishedSecond,
        MinorSecond,
        AugmentedUnison,
        MajorSecond,
        DiminishedThird,
        MinorThird,
        AugmentedSecond,
        MajorThird,
        DiminishedFourth,
        PerfectFourth,
        AugmentedThird,
        DiminishedFifth,
        AugmentedFourth,
        PerfectFifth,
        DiminishedSixth,
        MinorSixth,
        AugmentedFifth,
        MajorSixth,
        DiminishedSeventh,
        MinorSeventh,
        AugmentedSixth,
        MajorSeventh,
        DiminishedOctave,
        PerfectOctave,
        AugmentedSeventh
    }

    public enum Scales
    {
        Major,
        Minor
    }
}
